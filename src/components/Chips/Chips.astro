---
import {
    HTMLIcon,
    CSSIcon, 
    JavaScriptIcon, 
    TypeScriptIcon,  
    ReactIcon, 
    NextJSIcon, 
    NodeJSIcon,
    AstroJSIcon,
    AngularIcon,
    MongoDBIcon,
    PostgreSQLIcon,
    DockerIcon,
    TailwindIcon,
} from "../../icons";
import type { Technology } from "../../interfaces/types";

interface Props {
	tegnologies: Technology[];
	withIcon?: boolean;
}

const {tegnologies, withIcon} = Astro.props;

const iconShip = {
	HTML: HTMLIcon,
	CSS: CSSIcon,
	JavaScript: JavaScriptIcon,
	TypeScript: TypeScriptIcon,
	React: ReactIcon,
	NextJS: NextJSIcon,
	NodeIcon: NodeJSIcon,
	Astro: AstroJSIcon,
	Angular: AngularIcon,
	MongoDB: MongoDBIcon,
	PostgreSQL: PostgreSQLIcon,
	Docker: DockerIcon,
	'Zustand': 'Zustand',
	Tailwind: TailwindIcon,
};
---

<ul class="flex flex-wrap gap-2">
	{
		tegnologies.map((teg) => {
			if (teg in iconShip) {
				const IconComponent = iconShip[teg as keyof typeof iconShip];
				return (
					<li class="flex items-center gap-2 px-2 py-1 text-xs font-semibold text-gray-700 uppercase bg-gray-100 rounded-md border border-gray-300">
						{withIcon && IconComponent && <IconComponent class="w-4 h-4 text-gray-700" />}
						{teg}
					</li>
				);
			}
			return null;
		})
	}
</ul>
